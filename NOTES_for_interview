1) when creating branches for different sections of your project, should you delete the branch after you are done with coding the branches desired features and merging it to master?

2)users , i have librarian and consumer, should i have a user table that joins these 2?

3) when editing users, my current code outputs an unorganized hash like so to the patch request
          {"_method"=>"PATCH",
           "name"=>"Alex Mermelada",
           "username"=>"OldUser",
           "age"=>"22",
           "address"=>"Sparta",
           "email"=>"email@",
           "library_id"=>"1",
           "id"=>"14"}
  I would like this to be: where all the updates are nested into a hash that can neatly be inserted into the patch request
  {"_method"=>"PATCH", consumer [   "name"=>"Alex Mermelada",
                                     "username"=>"OldUser",
                                     "age"=>"22",
                                     "address"=>"Sparta",
                                     "email"=>"email@",
                                     "library_id"=>"1",
                                     "id"=>"14"]}
4) rackflash stopped working for alerts

5) libraries/:id  not showing book count for that library

6) /books/:id/edit in the books controller at the patch request,   in the browser i am unable to validate that you can not select 2 libraries then save.   It only saves 1, i would like to have an flash message saying you can only select 1
        the current code with .each enumerable returns the last checked box in to be passed to the update method




7) Book new erb / - What library does the book reside?.  Unable to show the variable @library.name by itself and to have that variable transfer through the form onto the post request to create the new book
      HOW DO YOU LOCK A FORM INPUT VALUE or pass an instance variable through the form to the post request
8) Section new workaround possible ,Library controller '/libraries/:id/sections/new', at get request add to the session what the new session id would be, to be viewed in post
